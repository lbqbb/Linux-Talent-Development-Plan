Linux达人养成计划（十）

shell编程之变量

第1章 Bash变量概述

Shell与其他语言的对比：
1、java等语言主要实现功能
2、Shell简化管理操作

第2章 Bash变量与变量分类

什么是变量

*变量是计算机内存的单元，其中存放的值可以改变
*变量让你能够把程序中准备使用的每一段数据都赋给一个简短、易于记忆的名字，因此它们十分有用

          变量命名规则
*变量名必须以字母或下划线打头，名字中间只能由字母、数字和下划线组成
*变量名的长度不得超过255个字符
*变量名在有效的范围内必须是唯一的
*在Bash中，变量的默认类型都是字符串类型
        变量按照存储数据分类
  *字符串型
  *整型
  *浮点型
  *日期型
   
         变量的分类
*用户自定义变量。变量自定义的
*环境变量：这种变量中主要保存的是和系统操作环境的数据。变量可以自定义，但是对系统生效的环境变量和变量作用是固定的
位置参数变量：这种变量主要是用来向脚本当中传递参数或数据的，变量名不能自定义，变量作用是固定的
预定义变量：是Bash中已经定义好的变量，变量名不能自定义，变量作用也是固定的

2-2 用户自定义变量

*变量名=变量值
*例如：
  -x =5
  -name="jie cao"

     变量调用

*echo $变量名
- 例如
     echo $x
     echo $name

     变量叠加

*x=123
*x="$x"456
*x=${x}789
     
     变量查看

*set
  -选项：
     -u   如果设定此选项，调用未声明变量时会报错（默认无任何提示）

     变量删除

*unset 变量名
例如：
   #unset name

2-3 bash环境变量

环境变量与用户自定义变量的区别？

（1）环境变量是全局变量
用户自定义变量是局部变量
（2）用户自定义变量只在当前的shell中生效
环境变量在当前shell和这个shell的所有子shell中生效
（3）对系统生效的环境变量名和变量作用是固定的

     设置环境变量
*export 变量名=变量值
或
*变量名=变量值
*export 变量名

     查看环境变量
#set
*#查看所有变量
#env
*#查看环境变量

    PATH环境变量

*PATH变量：系统查找命令的路径

#echo $PATH
*查看PATH环境变量

*PATH="$PATH"：/root/sh
*#增加PATH变量的值

    PS1环境变量

*PS1变量：命令提示符设置
  -\d:显示日期，格式为“星期 月 日”
  -\H:显示完整的主机名。如默认主机名“localhost.localdomain
  -\t:显示24小时制时间，格式为“HH:MM:SS"
  -\A:显示24小时制时间，格式为“HH：MM”
  -\u:显示当前用户名
  -\w:显示当前所在目录的完整名称
  -\W:显示当前所在目录的最后已覆盖各目录
  -\$：提示符。如果是root用户会显示提示符为"#",如果是普通用户会显示提示符为“$”

2-4 bash语系变量

   当前语系查询

#locale
 *查询当前系统语系
 -LANG :定义系统主语系的变量
 -LC_ALL:定义整体语系的变量

   语系变量LANG

#echo $LANG
*查看系统当前语系
#locale -a | more
*查看Linux支持的所有语系

   查询系统默认语系

#cat /etc/sysconfig/i18n

   Linux中文支持

*前提条件，正确安装的中文字体和中文语系
   -如果有图形界面，可以正确支持中文显示
   -如果使用第三方远程工具，只要语系设定正确，可以支持中文显示
   -如果使用纯字符界面，必须使用第三方插件（如zhcon等）

2-5 位置参数变量

1、位置参数变量

位置参数变量    作用
$n          n为数字，$0代表命令本身，$1-$9代表第一到第九个参数，十以上的参数需要用大括号包含，如$
            {10}
$*          这个变量代表命令行中所有的参数，$*把所有的参数看成一个整体
$@          这个变量也代表命令行中所有的参数，不过$@把每个参数区对待
$#          这个变量代表命令行中所有参数的个数

*例子1：
#!/bin/bash
num1=$1
num2=$2
sum=$(($num1 + $num2))
#变量sum的和是num1加num2
echo $sum
#打印变量sum的值

2-6 预定义变量

预定义变量      作用
$?          最后一次执行的命令的返回状态。如果这个变量的值为0，证明上一个命令正确执行；如果这个
            变量的值为非0（具体是哪个数，由命令自己来决定），则证明上一个命令执行不正确了。
$$          当前的进程的进程号（PID）
$!          后台运行的最后一个进程的进程号（PID）

      接收键盘输入

#read [选项][变量名]
  -选项：
  - -p “提示信息”：在等待read输入时，输出提示信息
  - -t秒数：read命令会一直等待用户输入，使用此选项可以指定等待时间
  - -n字符数：read命令只接受指定的字符数，就会执行
  - -s：隐藏输入的数据，适用于机密信息的输入
  
