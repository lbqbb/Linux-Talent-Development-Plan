Linux达人养成计划（九）

优雅玩转Vim

第一章 课程介绍

1-1 课程介绍

Vim简介
  
   *vim和vi区别
   *vimrc配置
   *vim不同模式

基础入门
    
    *vim寄存器
    *增查删改等常规操作
    *vim组合规律

高级功能
  
    *缓冲区与多文件编辑
    *多窗口与标签分组
    *文本对象和宏
    *visual模式

第2章 vim简介

2-1 vim介绍及vimrc

    vim介绍

*vim是一个Unix以及类Unix文本编辑器
*特点：功能强大、高度可定制

    vim VS vi

vim = vi + IMproved

    *多级撤销
    *语法加亮和自动补全
    *支持多种插件
    *通过网络协议（HTTP/SSH)编辑文件
    *多文件编辑
    *vim可以编辑压缩格式文件（gzip、zip等）

    vimrc

vimrc概述
 
    *rc = run command
    *系统级vimrc和用户级vimrc
    *每一行作为一个命令执行

vimrc使用

    >：version   >:e ~/.vimrc
    >"注释       >vimrc-Sample
    >:set number  设置显示每行行号
    >:set nonumber  取消显示每行行号

2-2 vim的四种模式

      模式
普通：
*打开默认模式
*移查删改
可视：
*对一整块区域操作
按v键，然后移动光标，可以整片区域操作
插入：
*添加文本
按i键
命令：
*和普通模式类似
如：
：version
：h vim-modes-intro

第3章 vim基础入门

3-1 移动、跳转与缩进

光标移动
h    左移
I    右移
j    下移
k    上移
^/0  移动到行首/包含缩进空格
$    移动到行尾巴

单词和字符串移动
w/W  正向移动到下一个单词开头，小写w不会跳过字符，比如标点符号
b/B  反向移动，小写b不会跳过字符，比如标点符号
e/E  正向移动下一个单词结尾,小写b不会跳过字符，比如标点符号
ge   反向

跳转
Ctrl-f/F  下一页
Ctrl-b/B  上一页
Ctrl-d/u  向下/上翻半页
gg        跳转到文件首行
<Line_Number>gg/G  跳转到指定行
G         跳转到文件最后一行
{g}+Ctrl—g/G       查看文件信息/{g}更加详细

缩进
>> / :>   右缩进
m,n> / :m>(n-m+1)   m到n行缩进
m>n等价于命令：m,m+n-1  m行开始共n行缩进一次

3-2 删除、复制与粘贴

对比
windows    vim    不同
cut      delete  和剪切相同，而不是直接删除
copy     yank   等同于复制由于c用于修改（change）被迫选了yank
paste    put   粘贴完全相同

     vim特性一

寄存器
类型        含义       表示方式    举例         特点
无名寄存器  默认寄存器   ""       "" p=p    会被最后一条覆盖
数字寄存器  "+{0-9}
          缓存最近10次  "0"{1-9} "0p       0用于复制专用1-9
          操作                   "1p      1-9用于最近9次行删
                                          除或修改记录
有名寄存器 26英文字母命  "[a-z]/  "ayw      "A会通过^J追加到
          名有名寄存器   [A/Z]             "a寄存器中
黑洞寄存器 有去无回      "-       "_dw     只想删除而不想覆盖
                                          无名寄存器
        
        删除、复制与粘贴

基本操作
    按键操作         定义
d=delete=cut      剪切
y=yank≈copy       类似于复制
p/P=put≈paste     粘贴到光标后/光标前
u = undo          撤销之前的操作
Ctrl-r = redo     重做/恢复之前操作

例如：
#vim .vimrc
然后，命令模式：register或者缩写reg

基本操作
    按键操作         定义
yw                复制当前光标单词
y2w               复制正向两个单词
p/P = put≈paste   粘贴到光标后/光标前
yy 类似于dd       复制当前光标整行

调换字符
    按键操作         缓冲区内容
0{start}            Practica lvim
F+{space}           practica lvim
x                   practicalvim
p                   practicalvim

行剪切粘贴
   按键操作         缓冲区内容
{start}          Line1
                 Line2
  dd             Line2
  p              Line2
                 Line1
行复制粘贴
   按键操作          缓冲区内容
{start}          Line1
                 Line2
  yy             Line1
                 Line2
   p             Line1
                 Line2
                 Line1

         vim 特性二
组合删除（[count]operation([count]){motion})
x/X      删除光标下/前单个字符
dw(d=delete w=word)   删除一个单词（必须在词首）
d+{hjkl} 删除到上下左右一个操作前的字符
d$=D     删除光标到行尾的字符
d^       删除光标到行首的字符
dd       删除当前整行
{n}dd    向下删除n行（包含当前行）
5dw      删除正向单词五次
3w       正向移动单词三次
D3w      正向删除3w动作
2d3w     正向删除3w动作 两次

3-3 修改、查找与替换

插入
   按键操作          定义
Shift+i/A      插入模式并移动到行首/行尾
a/i            光标后/前插入
[n]O/o         行前/后插入n次
[n]+i          插入模式重复n次
转换
   按键操作          定义
~              单个字符大小写转换
g~w            单词大小写转换
g~$/g~~        整行大小写转换
gU/uw          单词转换成大/小
查找
   按键操作          定义
F/f{char}          反向/正向查找单个字符
t{char}            查找字符前一个字符
dt{char}/df{space} 删除光标到查找字符间字符
/{char}            命令行查找
替换（substitute）
   语法：[range]s[ubstitute]/{pattern}/{string}/[flags]

   按键操作          定义
s/going/rolling/g   当前行所有going替换成rolling
%/going/rolling/g   %匹配所有范围
替换
   按键操作          定义
shift+r/R          替换模式
r                  单个字符替换
cw                 修改单个单词
c$/C类似于d操作符   修改光标之后行内内容

第4章 vim高级功能

4-1 缓冲区与多文件编辑

     vim 特性三
缓冲区、标签、窗口

缓冲区
    *buffer是内存中的一块缓冲区域，用于临时存放vim打开过的文件
缓冲区列表
    ：files     :buffers    :ls
缓冲区列表指示状态
   标记      含义
a        激活缓冲区，缓冲区被加载且显示。
h        隐藏缓冲区，缓冲区被加载但不显示。
%        当前缓冲区
#        交换缓冲区
=        只读缓冲区
+        已经更改缓冲区
-        不可改缓冲区，‘modifiable’选项不置位。

缓冲区列表操作
   指令            含义
：bp[revious]    上一个缓冲区
：bn[ext]        下一个缓冲区
：bf[irst]       到第一个缓冲区
：bl[ast]        到最后一个缓冲区
：buffer Number  指定缓冲区
/File_name   
：ball           编辑所有缓冲区
Ctrl+ ^/b#       切换到前一个buffer(交换buffer)
：qall!          退出全部缓冲区
：wall!          写入全部缓冲区
：badd           添加一个新缓冲区，但不设置为当前缓冲区
：bd[elete]      删除缓冲区
：n,m/%bd        删除n到m编号/所有的缓冲区文件
：bufdo{CMD}     bufdo set number
：E /:bd         打开文件目录列表/返回到最初buffer

4-2 多窗口操作与标签分组

      多窗口（分屏）

分屏操作
   指令           含义
vim -O/on     水平/垂直分屏 n:数字，o:Open
ctrl+w c/q    关闭当前窗口/最后一个窗口时退
ctrl+w s      上下分割当前打开的文件
:sp filename  上下分割，并打开一个新的文件
ctrl+w v      左右分割当前打开的文件
：vsp filename 左右分割，并打开一个新的文件

移动分屏和尺寸变动

   指令        含义
Ctrl+w K    向上移动
Ctrl+w J    向下移动
Ctrl+w L    向右移动
Ctrl+w H    向左移动
Ctrl+w +    增加高度
Ctrl+w -    减少高度
Ctrl+w =    让所有屏的高度一致

标签
   *标签就是容纳一系列窗口的容器。

标签操作
   指令        含义
：tabnew      新建标签页
：tabfind     查找并在新标签页中打开文件
：tabs        显示已打开标签页的列表
：tabclose    关闭当前标签页
：tabonly     仅保留当前标签页打开
：tabn/p/f    移动到下/上/第一/最后一个标签页
：tabm        将当前标签页放置到指定位置

标签操作和命令键
   指令                                    含义
gt/T                                移动到下/上一个标签
{i}gt                               移动到i位置的标签
noremap <C-L> <Esc>:tabnext<CR>     vimcr中自动定义快捷键
noremap <C-H> <Esc>:tabprevious<CR> vimcr中自动定义快捷键
：table                             编辑标签中的某个文件
table 0/tabm                        移动当前tab到第一个/最后一个
tabm{i}                             移动当前tab到i+1位置

4-3 文本对象与宏

      vim 特性四
文本对象
    {operator}{a}{object}
    {operator}{i}{object}

Word/Sentence/Paragraph

    textobject    说明
       w         word
       s         sentence
       p         paragraph
Visual mode
    指令           说明
    viw          选中单词
    vis          选中句子
    vip          选中段落
    vi(          选中圆括号中内容
    vi[          选中中括号内容
    vit          选中标签中的内容

   宏
简单操作
    指令         说明
qa        开始录制宏存到寄存器a中
qA        追加宏在a寄存器中追加
n@a       执行n遍a寄存器中的操作
@@        再执行一遍上一次操作
:n,mnormal
@a         n到m行执行寄存器a宏操作
:let @a='  编辑宏a寄存器

宏保存
   *viminfo / vimrc file
   *保存历史和非空寄存器
   *vim 启动时读取
   *容易被覆盖

4-4 Visual模式

     可视化模式

三种子模式
   v          激活面向字符的可视化模式
   V/shift+v  激活面向行的可视模式
   Ctrl+v     激活面向列块的可视模式

可视化模式操作
   操作符       说明
   gv         重选上次的高亮选区
   o          切换选取边界
   
