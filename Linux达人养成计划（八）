Linux达人养成计划（八）

Linux系统管理

第1章 进程管理

1-1 课程简介及Linux进程管理的作用

1、进程简介

*进程是在执行的一个程序或命令，每一个进程都是一个运行的实体，都有自己的地址空间，并占用一定的系统资源

2、进程管理的作用

*判断服务器健康状态
*查看系统中所有进程
*杀死进程

1-2 Linux进程的查看PS命令

1、查看所有进程

#ps aux
*查看系统中所有进程，使用BSD操作系统格式
#ps -le
*查看系统中所有进程，使用Linux标准命令格式
*选项
   -a ：显示一个终端的所有进程，除了会话引线
   - u：显示进程的归属用户及内存的使用情况
   -x：显示没有控制终端的进程
   - -l：长格式显示。显示更加详细的信息
   - -e：显示所有进程，和-A作用一致

2、ps命令的输出

USER：该进程是由哪个用户产生的；
PID：进程的ID号；
%CPU：该进程占用CPU资源的百分比，占用越高，进程越耗费资源；
%MEM：该进程占用物理内存的百分比，占用越高，进程越耗费资源；
VSZ：该进程占用虚拟内存的大小，单位KB；
RSS：该进程占用实际物理内存的大小，单位KB；
TTY：该进程是在哪个终端中运行的。其中tty1-tty7代表本地控制台终端，tty1-tty6是本地的字符界面终端，tty7是图形终端。pts/0-255代表虚拟终端。

*STAT：进程状态。常见的状态有：
   >R：运行
   >S：睡眠
   >T：停止状态
   >s：包含子进程
   >+：位于后台
START：该进程的启动时间
TIME：该进程占用CPU的运算时间，注意不是系统时间
COMMAND：产生此进程的命令名

3、PStree
#pstree 显示系统进程树
#pstree -p  显示系统进程树，并显示重叠进程

1-3 Linux进程的查看top命令

1、查看系统健康状态

#top [选项]
*选项：
  > -d 秒数：指定top命令每隔几秒更新。
  > -b：使用批处理模式输出。一般和“-n”选项合用
  > -n 次数：指定top命令执行的次数。一般和“-b”选项合用
*在top命令的交互模式当中可以执行的命令：
  >?或h：显示交互模式的帮助
  >P：以CPU使用率排序，默认就是此项
  >M：以内存的使用率排序
  >N：以PID排序
  >q：退出top

2、top命令显示第一行信息为任务队列信息

12:26:46 系统当前时间
up 1 day,13:32 系统的运行时间，本机已经运行1天13小时32分钟
2 users 当前登录了两个用户
loda  average：0.00,0.00,0.00  系统在此之前1分钟，5分钟，15分钟的平均负载。一般认为小于1小时，负载较小。如果大于1，系统已经超出负荷。（和CPU核数有关）

3、top命令显示第二行信息为任务队列信息

Tasks:95 total 系统中的进程总数
1 running 正在运行的进程树
94 sleeing 睡眠的进程
0 stopped  正在停止的进程
0 zombie  僵尸进程。如果不是0，需要手工检查僵尸进程

4、top命令显示第二行信息为CPU信息

Cpu(s):0.1%us 用户模式占用的CPU百分比
0.1%sy  系统模式占用的CPU百分比
0.0%ni  改变过优先级的用户进程占用的百分比
99.7%id 空闲CPU的CPU百分比
0.1%wa  等待输入/输出的进程的占用CPU百分比
0.0%hi  硬中断请求服务占用的CPU百分比
0.1%si  软中断请求服务占用的CPU百分比
0.0%st  st（Steal time）虚拟时间百分比就是当有虚拟机时，虚拟CPU等待实际CPU的时间百分比。

5、使用top查看所有进程

#top -b -n 1 > /root/top.log

1-4 Linux杀死进程

1、kill命令

#kill -l
*#查看可用的进程信号

2、killall [选项][信号]进程名

#按照进程名杀死进程
*选项：
   > -i：交互式，询问是否要杀死某个进程
   > -I：忽略进程名的大小写
#kill -1 2235
*平滑重启进程
#kill -9 2236
*强制杀死进程

3、pkill命令

#pkill [选项][信号]进程名
*按照进程名终止进程
*选项：
    > -t 终端号： 按照终端号踢出用户

    按照终端号踢出用户
#w
*使用w命令查询本机已经登录的用户
#Pkill -t pts/1
*强制杀死从pts/1虚拟机终端登录的进程
例如：
#pkill -9 -t tty1 踢出tty1用户
1-5 Linux修改进程优先级

       进程优先级简介

*Linux操作系统是一个多用户、多任务的操作系统，Linux系统中通知运行着非常多的进程。但是CPU在同一个时钟周期内只能运算一个指令。进程优先级决定了每个进程处理的先后顺序。

*PRI代表Priority，NI代表Nice。这两个值都是优先级，数字越小代表该进程优先级越高

       修改NI值是有几个注意事项

*NI的值的范围是-20到19
*普通用户调整NI值的范围是0到19，而且只能调整自己的进程
*普通用户只能调高NI值，不能降低，如原本NI值为0，则只能调整为大于0；
*root用户才能设定进程NI值为负值，而且可以调整任何用户的进程。
*PRI（最终值）= PRI（原始值）+ NI
*用户只能修改NI的值，不能直接修改PRI

例如：
1、nice命令

#nice [选项]命令
*nice命令可以给新执行的命令直接赋予NI值，但是不能修改已存在进程的NI值
*选项：
    > -n NI值：给命令赋予NI值
*例如
*#nice -n -5 service httpd start

第2章 工作管理

2-1 Linux工作管理简介

     工作管理简介

*工作管理指的是在单个登录终端中（也就是登录的shell界面中）同时管理多个工作的行为。

     注意事项

*当前的登录终端，只能管理当前终端的工作，而不能管理登录终端的工作
*放入后天的命令必须可以持续运行一段时间，这样我们才能捕捉和操作这个工作
*放入后台执行的命令不能和前台用户有交互或需要前台输入，否则放入后台只能暂停，而不能执行

例如：
#jobs
*查看后台工作程序

2-2 Linux工作管理方法

1、把进程放入后台

#tar -zcf etc.tar.gz/etc &
*把命令放入后台，并在后台执行
#top
*按下Ctrl+Z快捷键，放在后台暂停

2、查看后天的工作

#jobs [-l]
*选项：
   > -l ：显示工作的PID
*注：“+”号代表最近一个放入后台的工作，也是工作恢复时，默认恢复的工作。“-”号代表倒数第二个放入后台的工作

3、将后天暂停的工作恢复到前台执行

#fg %工作号
*参数：
   -%工作号：%号可以省略，但是公招和PID的区别

4、把后台暂停的工作恢复到后台执行

#bg%工作号
*注：后台恢复执行的命令，是不能和前台有交互的，否则不能恢复到后台执行

2-3 Linux后台命令脱离终端

     后天命令脱离登录终端执行的方法

*第一种方法是把需要后台执行的命令加入/etc/rc.local文件
*第二种方法是使用系统定时任务，让系统在指定的时间执行某个后台命令
*第三种方法是使用nohup命令
#nohup [命令] &
举例
#vi for.sh
#!/bin/bash
for((i=0;i<=1000;i=i+1)) <- 循环1000次
    do 
         echo 11 >> /root/for.log
         sleep 10s
    done
#nohup /root/for.sh &

第3章 系统资源查看

3-1 Linux系统资源查看

1、vmstat命令监控系统资源

#vmstat [刷新延时 刷新次数]
*例如：
    #vmstat 1 3
    *procs：进程信息字段：
    -r ：等待运行的进程数，数量越大，系统越繁忙。
    -b ：不可被唤醒的进程数量，数量越大，系统越繁忙。
    *memory：内存信息字段：
    -swpd：虚拟内存的使用情况，单位KB。
    -free：空闲的内存容量，单位KB。
    -buff：缓存的内存容量，单位KB。
    -cache：缓存的内存容量，单位KB。
注意：
       缓存和缓冲的区别
*简单来说缓存（cache）是用来加速数据从硬盘中“读取”的，而缓冲（buffer）是用来加速数据“写入”硬盘的。
     *swap：交换分区的信息字段：
     -si：从磁盘中交换到内存中数据的数据量，单位KB。
     -so：从内存中交换到磁盘中数据的数量，单位KB。此两个数越大，证明数据需要经常在磁盘和内存之间交换，系统性能越差。
     *io：磁盘读写信息字段：
     -bi：从块设备读入数据的总量，单位是块。
     -bo：写到块设备的数据总量，单位是块。此两个数越大，代表系统的I/O越繁忙。
     *system：系统信息字段：
     -in：每秒被中断的进程次数。
     -cs：每秒钟进行的事件切换次数。此两个数越大，代表系统与接口设备的通信非常繁忙。
     *CPU：CPU信息字段：
     -us：非内核进程消耗CPU运算时间的百分比。
     -sy：内核进程消耗CPU运算时间的百分比。
     -id：空闲CPU的百分比。
     -wa：等待I/O所消耗的CPU百分比。
     -st：被虚拟机所盗用的CPU百分比。

2、dmesg开机时内核检测信息

#dmesg
#dmesg | grep CPU

3、free命令查看内存使用状态

#free [-b|-k|-m|-g]
*选项：
  - -b：以字节为单位显示
  - -k：以KB为单位显示，默认就是以KB为单位显示
  - -m：以MB为单位显示
  - -g：以GB为单位显示

例如：
#free -g
#free -m 
注意：Swap是提高我们计算机性能，尤其是我们高耗费内存性能的重要手段。swap交换分区一定要按照这样的规律：如果真实机器内存小于4G，那么swap分区应该是内存的两倍；如果真实机器内存大于4G，swap分区最少应该和内存大小一样

4、查看CPU信息

#cat /proc/cpuinfo

5、uptime命令

#uptime
 -#显示系统的启动时间和平均负载，也就是top命令的第一行。w命令也可以看到这个数据。

6、查看系统与内核相关信息

#uname [选项]
*选项：
   - -a：查看系统所有相关信息
   - -r：查看内核版本；
   - -s：查看内核名称。
      判断当前系统的位数
#file /bin/ls
      查询当前Linux系统的发行版本，操作系统位数
#lsb_release -a

7、列出进程打开或使用的文件信息

#lsof [选项]
*#列出进程调用或者打开的文件的信息
*选项：
  - -c 字符串：只列出以字符串开头的进程打开的文件
  - -u 用户名：只列出某个用户的进程打开的文件
  - -p pid：列出某个PID进程打开的文件
#lsof | more
  -#查询系统中所有进程调用的文件
#lsof /sbin/init
  -#查询某个文件被哪个进程调用
#lsof -c httpd
  -#查看httpd进程调用了哪些文件
#lsof -u root
  -#按照用户名，查询有些用户的进程调用的文件名

第4章 系统定时任务

4-1 Linux at一次执行

1、确定at安装

#chkconfig --list | grep atd
*#at服务是否安装
#service atd restart
*#at服务的启动

2、at的访问控制

*如果系统中有/etc/at.allow文件，那么只有写入/etc/at.allow文件（白名单）中的用户可以使用at命令（/etc/at.deny文件会被忽略）

*如果系统中没有/etc/at.allow文件,只有/etc/at.deny文件，那么写入/etc/ad.deny文件（黑名单）中的用户不能使用at命令。对root不起作用

*如果系统中这两个文件都不存在，那么只有root用户可以使用at命令

3、at命令

#at [选项] 时间
*选项：
  - -m：当at工作完成后，无论是否命令有输出，都用email通知执行at命令的用户
  - -c 工作号：显示该at工作的实际内容
*时间：
   - HH：MM 例如：02:30
   - HH：MM YYYY-MM-DD  例如：02:30 2019-06-20
   - HH：MM[am|pm] [month|date] 例如：02:30 July 25
   - HH：MM[am|pm] + [minutes|hours|day|weeks]  例如：
   now + 5 minutes

4、例子1

#at now + 2 minutes
*#在两分钟之后执行hello.sh脚本
at> /root/hello.sh >> /root/hello.log
#atq
*#此时查询当前服务器上已经有的at工作任务
#at -c 1(工作号)
*#查询这个任务的具体内容

例子2
#at 02:00 2019-07-26
*#在指定的时间重启
at> /bin/sync
at> /sbin/shutdown -r now

5、其他at管理命令

#atq
*#查询当前服务器上的at工作
#atrm [工作号]
*#删除指定的at任务

4-2 Linux crontab循环定时任务（上）

1、crond服务管理与访问控制（上）

#service crond restart
#chkconfig crond on

         访问控制

*当系统中有/etc/cron.allow文件时，只有写入该文件的用户可以使用crontab命令，没有写入的用户不能使用crontab命令。同样如果有此文件，/etc/cron.deny文件会被忽略，/etc/cron.allow文件的优先级更高
*当系统中只有/etc/cron.deny文件时，则写入该文件的用户不能使用crontab命令，没有写入文件的用户可以使用crontab命令

2、用户的crontab设置

#crontab [选项]
*选项：
   -e :编辑crontab定时任务
   -l ：查询crontab任务
   -r ：删除当前用户所有的crontab任务
#crontab -e
*#进入crontab编辑界面。会打开vim编辑你的工作。
*****执行的任务

项目              含义          范围
第一个“*”  一小时当中的第几分钟  0-59
第二个“*”  一天当中的第几小时    0-23
第三个“*”  一个月当中的第几天    1-31
第四个“*”  一年当中的第几月      1-12
第五个“*”  一周当中的星期几      0-7（0和7都代表星期日）

特殊符号          含义
*         代表任何时间。比如第一个“*”就代表一小时中每分钟都执行一次的意思。
,         代表不连续的时间。比如“0,8,12,16***命令”，就代表在每天的8点0
          分，12点0分，16点0分都执行一次命令
-         代表连续的时间范围。比如“0 5 **1-6命令”，代表在周一到周六的凌晨5点0分执行命令
*/n       代表每隔多久执行一次。比如“*/10****命令”，代表每隔10分钟就执行一遍命令

45 22 * * * 命令    在22点45分执行命令
0 17 * * 1 命令   在每周1的17点0分执行命令
0 5 1,15 * * 命令  每月1号和15号的凌晨5点0分执行命令
40 4 * * 1-5 命令   每周一到周五的凌晨4点40分执行命令
*/10 4 * * * 命令  每天的凌晨4点，每隔10分钟执行一次命令
0 0 1,15 * 1 命令  每个月的1号和15号的0点0分执行；每周一的0点0分执行


         举例
*5 5 ** 2 /sbin/shutdown -r now
*#每周二凌晨五点五分重启计算机
*0 5 1,10,15 **/root/sh/autobak.sh
*在每个月的一号，十号，十五号凌晨五点执行备份脚本

3、其他比较有用的命令

#crontab -l  查询定时任务
#crontab -r 清除定时任务

4、crontab注意事项

*六个选项都不能为空、必须填写。如果不确定使用“*”代表任意时间
*crontab定时任务，最小有效时间是分钟，最大时间范围是月。像2018年某时执行，3点30分30秒这样的时间都不能识别
*在定义时间时，日期和星期最好不要在一条定时任务中出现，因为他们都是以天作为单位，非常容易让管理员混乱
*在定时任务中，不管是直接写命令，还是在脚本中写命令，最好都是用绝对路径

4-3 crontab循环定时任务（下）

45 22 * * * 命令    在22点45分执行命令
0 17 * * 1 命令   在每周1的17点0分执行命令
0 5 1,15 * * 命令  每月1号和15号的凌晨5点0分执行命令
40 4 * * 1-5 命令   每周一到周五的凌晨4点40分执行命令
*/10 4 * * * 命令  每天的凌晨4点，每隔10分钟执行一次命令
0 0 1,15 * 1 命令  每个月的1号和15号的0点0分执行；每周一的0点0分执行

4-4 Linux系统的crontab设置

    系统的定时任务

*“crontab -e” 是每个用户执行的命令，也就是说不同的用户身份可以执行自己的定时任务。可是有些定时任务需要系统执行，这时我们就需要编辑/etc/crontab这个配置文件了

    执行系统的定时任务的方法
*第一种是把需要定时执行的脚本复制到/etc/cron.{daily,weekly,monthly}目录中的任意一个
*第二种是修改/etc/crontab配置文件

4-5 anacron配置及总结

       anacron是什么

*anacron是用来保证在系统关机的时候错过的定时任务，可以在系统开机之后再执行

       anacron检测周期

*anacron会使用一天，七天，一个月作为检测周期
*在系统的/var/spool/anacron/目录中存在cron.{daily,weekly,monthly}文件，用于记录上次执行cron的时间
*和当前时间做比较，如果两个时间的差值超过了anacron的指定时间差值，证明有cron任务被执行

       CentOS 6.x的区别

*在老的CentOS版本中，/etc/cron.{daily,weekly,monthly}这些目录即会被cron调用，也会被anacron调用，容易重复执行
*在CentOS 6.x中只会被anacron调用，避免了重复执行
*在CentOS6.x中，anacron不再是服务，而是系统命令

       anacron配置文件

#vi /etc/anacrontab
  - RANDOM_DELAY=45
  *#最大随机延迟
  - START_HOURS_RANGE=3-22
  *#anacron的执行时间范围是3:00-22:00
  -1   5  cron.daily  nice run-parts /etc/cron.daily
  -7   25 cron.weekly nice run-parts /etc/cron.weekly
  -@monthly 45 cron.monthly nice run-parts /etc/cron.monthly
  *#天数  强制延迟（分）工作名称  实际执行的命令

     cron.daily工作来说明执行过程

*首先读取/var/spool/anacron/cron.daily中的上一次anacron执行的时间
*和当前时间比较，如果两个时间的差值超过1天，就执行cron.daily工作
*执行这个工作只能在03:00——22:00之间
*执行工作时强制延迟时间为5分钟，再随机延迟0-45分钟时间
*使用nice命令执行默认优先级，使用run-parts脚本执行/etc/cron.daily目录中的所有可执行文件
